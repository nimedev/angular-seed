'use strict';

var translationsEN = {

};

/** @module app */
(function() {
  'use strict';

  angular
    .module('angular-seed', [
      // angular modules
      'ngAnimate',
      'ngAria',
      'ngCookies',
      'ngMessages',
      'ngResource',
      'ngSanitize',

      // comunity modules
      'pascalprecht.translate',

      // components
      'header',
      'sidenav',

      // shared components
      'route'
    ]);
})();

/** @module header */
(function() {
  'use strict';

  angular
    .module('header', []);
})();

/** sidenav module */
(function() {
  'use strict';

  angular.module('sidenav', []);
})();
/** @module route */
(function() {
  'use strict';

  angular
    .module('route', ['ngRoute']);
})();

/** config component for angular-seed module. */
(function() {
  'use strict';

  angular
    .module('angular-seed')
    .config(config);

  config.$inject = ['constants', '$locationProvider', '$translateProvider'];

  /**
   * settings for angular-seed module.
   * @name config
   * @memberof angular-seed
   * @param {Object} constants to get debug mode.
   * @param {Object} $locationProvider - to friendly html.
   * @param {Object} $translateProvider - to angular-translate settings.
   */
  function config(constants, $locationProvider, $translateProvider) {
    // get rid of the hash in the URL
    $locationProvider.html5Mode(true);

    // angular-translate configuration
    $translateProvider.translations('en', translationsEN);
    $translateProvider.useStaticFilesLoader({
      prefix: 'app/i18n/locale-',
      suffix: '.json'
    });
    $translateProvider.preferredLanguage('en');
    $translateProvider.fallbackLanguage('en');
    $translateProvider.useLocalStorage();
    // $translateProvider.useSanitizeValueStrategy('sanitize');
    $translateProvider.useSanitizeValueStrategy('escape');
    if (constants.DEBUG) {
      // $translateProvider.useMissingTranslationHandlerLog();
    }
  }
})();

/** constants constant. */
(function() {
  'use strict';

  // application constants
  angular
    .module('angular-seed')
    .constant('constants', {
      // server base url
      REST_URL: '',

      // Debug mode
      DEBUG: true
    });
}());

/** appAboutView component */
(function (){
  'use strict';
  
  /**
   * component for about view
   * @name appAboutView
   * @memberof angular-seed
   */
  angular
    .module('angular-seed')
    .component('appAboutView', {
      templateUrl: 'app/components/about/about.tmpl.html'
    });
})();
/** appHeader component */
(function() {
  'use strict';

  /**
   * header directive
   * @name appHeader
   * @memberof header
   */
  angular
    .module('header')
    .component('appHeader', {
      controller: Controller,
      controllerAs: 'vm',
      restrict: 'A',
      templateUrl: 'app/components/header/header.tmpl.html'
    });

  Controller.$inject = ['$location'];

  /**
   * controller for header directive.
   * @name Controller
   * @memberof appHeader
   * @param {Object} $location - to redirect to another link.
   */
  function Controller($location) {
    var vm = this;

    /** controller fields */

    /** controller methods */

    activate();

    ////////////
    /** init function */
    function activate() {

    }
  }
})();

/** appHomeView component */
(function () {
  'use strict';

  /**
   * component for home view
   * @name appHomeView
   * @memberof angular-seed
   */
  angular
    .module('angular-seed')
    .component('appHomeView', {
      templateUrl: 'app/components/home/home.tmpl.html'
    });
})();

/** appSidenav component */
(function () {
  'use strict';
  
  /**
   * component for sidenav
   * @name appSidenav
   * @memberof sidenav
   */
  angular
    .module('sidenav')
    .component('appSidenav', {
      restrict: 'A',
      templateUrl: 'app/components/sidenav/sidenav.tmpl.html'
    });
})();
/** config component for route of app. */
(function () {
  'use strict';

  angular
    .module('route')
    .config(config);

  config.$inject = ['$routeProvider'];

  /**
   * settings for routes module.
   * @name config
   * @memberof route
   * @param {Object} $routeProvider - to ...
   */
  function config($routeProvider) {

    // app routes that not have own module
    $routeProvider
    // home view
      .when('/', {
        template: '<app-home-view></app-home-view>'
      })
    // about view
      .when('/about', {
        template: '<app-about-view></app-about-view>'
      })
    // redirect path
      .otherwise({
        redirectTo: '/'
      });
  }
})();
